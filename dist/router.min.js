var router=function(){const parent=this;this.notfound=!0;this.routes=[];this.paramsEnabled=!1;this.routeCall=function(){};this.params=[];this.BeforeRouteMiddleware='*';this.BeforeRouteMiddlewareFunc=null;this.AfterRouteCallback=null;this.route={};let notFoundCallback=function(){throw new TypeError('Router.js : 404 error.')};this.setErrorCallback=function(func){notFoundCallback=func};this.notFoundException=function(){notFoundCallback.apply()};this.getCurrentURI=function(){return new RouterRequest().getURI()};this.before=function(route,func){parent.BeforeRouteMiddleware=route;parent.BeforeRouteMiddlewareFunc=func};this.add=function(name,route,callback){let routeArray=route.split('/'),paramsEnabled=!1,params=[];routeArray.forEach(function(r){if(r.substr(0,1)===':'){paramsEnabled=parent.paramsEnabled=!0;params.push(r.substr(1,r.length))}});switch(route.substr(0,2)){case '#/':route=route.substr(1);break;case '/#':route=route.substr(2);break}
    parent.routes.push({name:name,route:route,callback:callback,paramsEnabled:paramsEnabled,params:params})};this.map=function(name,mount,routes=[]){routes.forEach(function(route){parent.add(name+route.name,mount+parent.FormatPath(route.route,!0),route.callback)})};this.fetchRoute=function(routeName,params){let targetRoute=parent.routes.find(function(route){return route.name===routeName||route.route===routeName});if(targetRoute===undefined){new Exception('Target route "'+routeName+'" does not exist')}
    if(!targetRoute.paramsEnabled){new RouterRequest().setURI(targetRoute.route)}else if(targetRoute.paramsEnabled){new Exception('"'+routeName+'" route has parameter(s) and cannot be call dynamically')}};this.FormatPath=function(path,OnlySlash=!1){if(OnlySlash&&path==='/'){path=''}else if(!OnlySlash&&path.substr(0,1)==='/'){path=path.substr(1)}
    return path};let setRoute=function(route,params=[]){parent.route=route;parent.routeCall=route.callback;parent.params=params;parent.notfound=!1};this.handle=function(routes){let URI=parent.getCurrentURI();routes.forEach(function(Route){let RouteArray=Route.split('/');let URIarray=URI.split('/');if(URIarray.length===RouteArray.length){let RouteOptions=new handlingParams(Route);URIarray=URIarray.join('');if(RouteOptions.RouteArray===URIarray){parent.routes.forEach(function(route){if(route.route===Route&&parent.notfound){setRoute(route,RouteOptions.params)}})}}})};this.run=function(AfterRouteCallback=null){let URI=parent.getCurrentURI();let routes=[];parent.notfound=!0;new BeforeMiddleware(parent.BeforeRouteMiddleware,parent.BeforeRouteMiddlewareFunc);parent.routes.forEach(function(route){if(route.paramsEnabled){routes.push(route.route);parent.handle(routes)}else if(route.route===URI){setRoute(route)}});if(parent.notfound){notFoundCallback.apply()}else{parent.routeCall.apply(null,parent.params)}
    if(AfterRouteCallback!=null){parent.AfterRouteCallback=AfterRouteCallback;parent.AfterRouteCallback.apply()}else if(parent.AfterRouteCallback!=null){parent.AfterRouteCallback.apply()}};window.addEventListener('hashchange',function(){parent.run()})};let RouterRequest=function(){const parent=this;let URI='/'+location.hash;this.getURI=function(){if(location.hash.substr(0,2)==='#/'){URI=location.hash.substr(1)}
    return URI};this.setURI=function(route){location.hash=route}};let BeforeMiddleware=function(route,callback){const parent=this;this.route=route;this.callback=callback;this.URI=new RouterRequest().getURI();switch(this.route.substr(0,2)){case '#/':this.route=this.route.substr(1);break;case '/#':this.route=this.route.substr(2);break}
    if(this.callback!=null){if(this.route==='*'){this.callback.apply()}else if(this.route===this.URI){this.callback.apply()}}};let handlingParams=function(route){const parent=this;let URIarray=router.getCurrentURI().split('/');let RouteArray=route.split('/');let params=[];this.pushParam=function(param){if(param!==''){params.push(param)}};for(var i=0;i<RouteArray.length;i++){if(RouteArray[i].substr(0,1)===':'){parent.pushParam(URIarray[i]);RouteArray[i]=URIarray[i]}}
    return{params:params,RouteArray:RouteArray.join('')}};let Exception=function(message){throw new TypeError(message)}